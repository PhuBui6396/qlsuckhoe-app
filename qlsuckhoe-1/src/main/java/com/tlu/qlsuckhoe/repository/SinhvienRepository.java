/*
 * Created on 2018-09-27 ( Date ISO 2018-09-27 - Time 09:24:56 )
 * Generated by Telosys ( http://www.telosys.org/ ) version 3.0.0
*/
package com.tlu.qlsuckhoe.repository;
import com.tlu.qlsuckhoe.entity.Sinhvien;

import java.util.List;

import javax.transaction.Transactional;

import org.springframework.data.jpa.repository.JpaRepository;
import org.springframework.data.jpa.repository.Modifying;
import org.springframework.data.jpa.repository.Query;
import org.springframework.data.repository.query.Param;
import org.springframework.stereotype.Repository;

/**
 * Jpa repository for Sinhvien.
 * @author Telosys (http://www.telosys.org/) version 3.0.0
 */
@Repository
public interface SinhvienRepository  extends JpaRepository<Sinhvien, Integer> {
	@Query(value="Select * from Sinhvien limit :skip,:size",nativeQuery=true)
	List<Sinhvien> findAllSinhvienWithPagination(@Param("skip") Integer skip,@Param("size") Integer size);
	@Query(value="Select * from sinhvien s where s.khoa = :khoa",nativeQuery=true)
	List<Sinhvien> findAllSinhvienWithKhoa(@Param("khoa") String khoa);
	@Query(value="Select * from sinhvien s group by s.khoa ",nativeQuery=true)
	List<Sinhvien> findAllKhoa();
	@Query(value="Select * from sinhvien s where s.chuyennganh = :chuyennganh",nativeQuery=true)
	List<Sinhvien> findAllSinhvienWithChuyennganh(@Param("chuyennganh") String chuyennganh);
	@Query(value="Select * from sinhvien s group by s.chuyennganh ",nativeQuery=true)
	List<Sinhvien> findAllChuyennganh();
	@Query(value="Select * from sinhvien s where s.khoa = :khoa and s.chuyennganh = :chuyennganh ",nativeQuery=true)
	List<Sinhvien> findByChuyennganhAndKhoa(@Param("khoa") String khoa,@Param("chuyennganh") String chuyennganh);
	@Query(value="Delete from sinhvien where idsinhvien = :idsinhvien ",nativeQuery=true)
	@Transactional
	@Modifying
	void deleteById(@Param("idsinhvien") int idsinhvien);
	@Query(value="Select * from sinhvien s where s.khoa = :khoa limit :skip,:size",nativeQuery=true)
	List<Sinhvien> findAllSinhvienWithKhoaPagination(@Param("khoa") String khoa,@Param("skip") Integer skip,@Param("size") Integer size);
	@Query(value="Select * from sinhvien s where s.masv = :maten",nativeQuery=true)
	Sinhvien findSinhvienMasvTen(@Param("maten") String maten);
	@Query(value="Select * From sinhvien s where s.khoa = :khoa and "
			+ "s.idsinhvien not in ("
			+ "Select idsinhvien from dinhky k where k.idhocki=:idhocki group by k.idhocki)",nativeQuery=true)
	List<Sinhvien> findSvChuaKhamByHockiAndKhoa(@Param("khoa") String khoa,@Param("idhocki") int idhocki);
	@Query(value="Select * From sinhvien s where s.khoa = :khoa and "
			+ "s.idsinhvien in ("
			+ "Select idsinhvien from dinhky k where k.idhocki=:idhocki group by k.idhocki)",nativeQuery=true)
	List<Sinhvien> findSvKhamByHockiAndKhoa(@Param("khoa") String khoa,@Param("idhocki") int idhocki);
	@Query(value="Select * From sinhvien s where s.khoa = :khoa and "
			+ "s.idsinhvien not in ("
			+ "Select idsinhvien from dinhky k where k.idhocki=:idhocki group by k.idhocki) limit :skip,:pageSize",nativeQuery=true)
	List<Sinhvien> findSvChuaKhamPaginationByHockiAndKhoa(@Param("khoa") String khoa,@Param("idhocki") int idhocki,@Param("skip") int skip,@Param("pageSize") int  pageSize);
	
	@Query(value="Select * From sinhvien s where s.khoa = :khoa and "
			+ "s.idsinhvien not in ("
			+ "Select idsinhvien from dinhky k where k.idhocki=:idhocki group by k.idhocki) "
			+ "and (s.masv = :maten or s.hoten like concat('%',:maten,'%'))",nativeQuery=true)
	List<Sinhvien> findSvChuaKhamByHockiKhoaMaten(@Param("khoa") String khoa,@Param("idhocki") int idhocki,@Param("maten") String maten);
	@Query(value="Select * From sinhvien s where s.khoa = :khoa and "
			+ "s.idsinhvien in ("
			+ "Select idsinhvien from dinhky k where k.idhocki=:idhocki group by k.idhocki) "
			+ "and (s.masv = :maten or s.hoten like concat('%',:maten,'%'))",nativeQuery=true)
	List<Sinhvien> findSvKhamByHockiKhoaMaten(@Param("khoa") String khoa,@Param("idhocki") int idhocki,@Param("maten") String maten);
}