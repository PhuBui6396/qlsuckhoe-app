/*
 * Created on 2018-09-27 ( Date ISO 2018-09-27 - Time 09:24:56 )
 * Generated by Telosys ( http://www.telosys.org/ ) version 3.0.0
*/
package com.tlu.qlsuckhoe.service;


import java.util.ArrayList;
import java.util.List;

import javax.transaction.Transactional;

import com.tlu.qlsuckhoe.repository.SucosuckhoeRepository;
import com.tlu.qlsuckhoe.service.criteria.Sucosuckhoeadd;
import com.tlu.qlsuckhoe.service.criteria.Sucosuckhoelist;
import com.tlu.qlsuckhoe.service.criteria.Thietbiadd;
import com.tlu.qlsuckhoe.service.criteria.Thietbilist;
import com.tlu.qlsuckhoe.service.criteria.Thuocadd;
import com.tlu.qlsuckhoe.service.criteria.Thuoclist;
import com.tlu.qlsuckhoe.entity.Sucosuckhoe;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

@Service
@Transactional
public class SucosuckhoeServiceImpl implements SucosuckhoeService {

	@Autowired
	private SucosuckhoeRepository sucosuckhoeRepository;
	@Autowired
	private SinhvienServiceImpl sinhvien;
	@Autowired
	private ThuocServiceImpl thuoc;
	@Autowired
	private ThietbiyteServiceImpl thietbi;
	@Override
	public Sucosuckhoe getOne(Integer idsucosuckhoe) {
		return sucosuckhoeRepository.findOne(idsucosuckhoe);
	}

	@Override
	@Transactional
	public void delete(int idsinhvien,String ngay) {
		sucosuckhoeRepository.deleteUpdate(idsinhvien, ngay);
	}
	@Override
	@Transactional
	public Sucosuckhoeadd create(Sucosuckhoeadd sucosuckhoe) {
		for(Thuocadd t:sucosuckhoe.getThuoc())
		{
			Sucosuckhoe sc=new Sucosuckhoe();
			sc.setBienphap(sucosuckhoe.getBienphap());
			sc.setSinhvien(sinhvien.findById(sucosuckhoe.getIdsinhvien()));
			sc.setLoaisuco(sucosuckhoe.getLoaisuco());
			sc.setMucdo(sucosuckhoe.getMucdo());
			sc.setNgay(sucosuckhoe.getNgay());
			sc.setNguoixuly(sucosuckhoe.getNguoixuly());
			sc.setThuoc(thuoc.findById(t.getIdthuoc()));
			sc.setThietbiyte(thietbi.findById(1));
			sucosuckhoeRepository.save(sc);
		}
		for(Thietbiadd tb:sucosuckhoe.getThietbi())
		{
			Sucosuckhoe sc=new Sucosuckhoe();
			sc.setBienphap(sucosuckhoe.getBienphap());
			sc.setSinhvien(sinhvien.findById(sucosuckhoe.getIdsinhvien()));
			sc.setLoaisuco(sucosuckhoe.getLoaisuco());
			sc.setMucdo(sucosuckhoe.getMucdo());
			sc.setNgay(sucosuckhoe.getNgay());
			sc.setNguoixuly(sucosuckhoe.getNguoixuly());
			sc.setThuoc(thuoc.findById(1));
			sc.setThietbiyte(thietbi.findById(tb.getIdthietbi()));
			sucosuckhoeRepository.save(sc);
		}
		return sucosuckhoe;
	}
	@Override
	@Transactional
	public void update(int idsinhvien,String ngay,Sucosuckhoeadd sucosuckhoe) {
		sucosuckhoeRepository.deleteUpdate(idsinhvien,ngay);
		create(sucosuckhoe);
	}
	@Override
	public Boolean exist(Sucosuckhoe sucosuckhoe) {
						return sucosuckhoeRepository.exists(sucosuckhoe.getIdsucosuckhoe());
																																					}

	@Override
	public List<Sucosuckhoe> findAll() {
		return sucosuckhoeRepository.findAll();
	}

	@Override
	public List<Sucosuckhoelist> findAllSuco(String khoa) {
		List<Sucosuckhoelist> scl=new ArrayList<Sucosuckhoelist>();
		List<Sucosuckhoe> sc=sucosuckhoeRepository.findGroupbySinhvienKhoa(khoa);
		for(Sucosuckhoe sk:sc) {
			List<Sucosuckhoe> sk1=sucosuckhoeRepository.findByIdSinhvienngay(sk.getSinhvien().getIdsinhvien());
			for(Sucosuckhoe s:sk1)
			{
				Sucosuckhoelist suco = new Sucosuckhoelist();
				List<Thuoclist> th=new ArrayList<Thuoclist>();
				List<Thietbilist> tb=new ArrayList<Thietbilist>();
				suco.setNgay(s.getNgay());
				suco.setIdsinhvien(s.getSinhvien().getIdsinhvien());
				suco.setBienphap(s.getBienphap());
				suco.setMucdo(s.getMucdo());
				suco.setLoaisuco(s.getLoaisuco());
				suco.setHoten(s.getSinhvien().getHoten());
				suco.setMasv(s.getSinhvien().getMasv());
				suco.setNguoixuly(s.getNguoixuly());
				List<Sucosuckhoe> sucoSinhvien=sucosuckhoeRepository.findByIdSinhvien(s.getSinhvien().getIdsinhvien(),s.getNgay());
				for(Sucosuckhoe suc:sucoSinhvien) {
					if(suc.getThuoc().getIdthuoc()!=1)
					{
						Thuoclist t=new Thuoclist();
						t.setIdsucosuckhoe(suc.getIdsucosuckhoe());
						t.setThuoc(suc.getThuoc());
						th.add(t);
						
					}
					else
					{
						Thietbilist thietbi=new Thietbilist();
						thietbi.setIdsucosuckhoe(suc.getIdsucosuckhoe());
						thietbi.setThietbi(suc.getThietbiyte());
						tb.add(thietbi);
					}
				}
				suco.setThuoc(th);
				suco.setThietbi(tb);
				scl.add(suco);
			}
		}
		return scl;
	}

	@Override
	public Sucosuckhoelist findBySinhVien(int idsinhvien,String ngay) {
		Sucosuckhoelist suco=new Sucosuckhoelist();
		List<Sucosuckhoe> sucosk=sucosuckhoeRepository.findByIdSinhvien(idsinhvien,ngay);
		Sucosuckhoe s =sucosk.get(0);
		if(s!=null)
		{
			suco.setIdsinhvien(s.getSinhvien().getIdsinhvien());
			suco.setNgay(s.getNgay());
			suco.setBienphap(s.getBienphap());
			suco.setMucdo(s.getMucdo());
			suco.setLoaisuco(s.getLoaisuco());
			suco.setHoten(s.getSinhvien().getHoten());
			suco.setMasv(s.getSinhvien().getMasv());
			suco.setNguoixuly(s.getNguoixuly());
			List<Thuoclist> th=new ArrayList<Thuoclist>();
			List<Thietbilist> tb=new ArrayList<Thietbilist>();
			for(Sucosuckhoe suc:sucosk )
			{
				if(suc.getThuoc().getIdthuoc()!=1)
					{
						Thuoclist t=new Thuoclist();
						t.setIdsucosuckhoe(suc.getIdsucosuckhoe());
						t.setThuoc(suc.getThuoc());
						th.add(t);	
					}
				else
					{
						Thietbilist thietbi=new Thietbilist();
						thietbi.setIdsucosuckhoe(suc.getIdsucosuckhoe());
						thietbi.setThietbi(suc.getThietbiyte());
						tb.add(thietbi);
					}
			}
			suco.setThuoc(th);
			suco.setThietbi(tb);
			return suco;
		}
		else
			return null;
	}

	@Override
	public List<Sucosuckhoelist> findBySV(int idsinhvien) {
		List<Sucosuckhoelist> scl=new ArrayList<Sucosuckhoelist>();
		List<Sucosuckhoe> sc=sucosuckhoeRepository.findByIdSinhvienngay(idsinhvien);
		for(Sucosuckhoe s:sc) {
			Sucosuckhoelist suco = new Sucosuckhoelist();
			List<Thuoclist> th=new ArrayList<Thuoclist>();
			List<Thietbilist> tb=new ArrayList<Thietbilist>();
			suco.setNgay(s.getNgay());
			suco.setIdsinhvien(s.getSinhvien().getIdsinhvien());
			suco.setBienphap(s.getBienphap());
			suco.setMucdo(s.getMucdo());
			suco.setLoaisuco(s.getLoaisuco());
			suco.setHoten(s.getSinhvien().getHoten());
			suco.setMasv(s.getSinhvien().getMasv());
			suco.setNguoixuly(s.getNguoixuly());
			List<Sucosuckhoe> sucoSinhvien=sucosuckhoeRepository.findByIdSinhvien(s.getSinhvien().getIdsinhvien(),s.getNgay());
			for(Sucosuckhoe suc:sucoSinhvien) {
				if(suc.getThuoc().getIdthuoc()!=1)
				{
					Thuoclist t=new Thuoclist();
					t.setIdsucosuckhoe(suc.getIdsucosuckhoe());
					t.setThuoc(suc.getThuoc());
					th.add(t);
					
				}
				else
				{
					Thietbilist thietbi=new Thietbilist();
					thietbi.setIdsucosuckhoe(suc.getIdsucosuckhoe());
					thietbi.setThietbi(suc.getThietbiyte());
					tb.add(thietbi);
				}
			}
			suco.setThuoc(th);
			suco.setThietbi(tb);
			scl.add(suco);
		}
		return scl;
	}

}

