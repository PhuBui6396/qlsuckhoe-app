/*
 * Created on 2018-09-27 ( Date ISO 2018-09-27 - Time 09:24:57 )
 * Generated by Telosys ( http://www.telosys.org/ ) version 3.0.0
*/
package com.tlu.qlsuckhoe.service;



import java.util.List;

import javax.transaction.Transactional;

import com.tlu.qlsuckhoe.repository.YteRepository;
import com.tlu.qlsuckhoe.service.criteria.YteCriteria;
import com.tlu.qlsuckhoe.entity.Yte;
import com.tlu.qlsuckhoe.entity.PageResult;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

@Service
@Transactional
public class YteServiceImpl implements YteService {

	@Autowired
	private YteRepository yteRepository;

	@Autowired
	private RoleServiceImpl role;
	@Override
	public Yte findById(Integer idyte) {
		return yteRepository.findOne(idyte);
	}

	@Override
	@Transactional
	public void delete(Integer idyte) {
		yteRepository.deleteById(idyte);
	}

	@Override
	@Transactional
	public Yte create(YteCriteria yteToUpdate) {
		Yte yte=new Yte();
		yte.setHoten(yteToUpdate.getHoten());
		yte.setDiachi(yteToUpdate.getDiachi());
		yte.setGioitinh(yteToUpdate.getGioitinh());
		yte.setTendangnhap(yteToUpdate.getTendangnhap());
		yte.setMatkhau(yteToUpdate.getMatkhau());
		yte.setNamsinh(yteToUpdate.getNamsinh());
		yte.setSocmt(yteToUpdate.getSocmt());
		yte.setSodt(yteToUpdate.getSodt());
		yte.setChucvu(yteToUpdate.getChucvu());
		yte.setRole(role.findById(yteToUpdate.getIdrole()));
		return yteRepository.save(yte);
	}
	@Override
	@Transactional
	public Yte update(int idyte,YteCriteria yteToUpdate) {
		Yte yte=findById(idyte);
		yte.setHoten(yteToUpdate.getHoten());
		yte.setDiachi(yteToUpdate.getDiachi());
		yte.setGioitinh(yteToUpdate.getGioitinh());
		yte.setTendangnhap(yteToUpdate.getTendangnhap());
		yte.setMatkhau(yteToUpdate.getMatkhau());
		yte.setNamsinh(yteToUpdate.getNamsinh());
		yte.setSocmt(yteToUpdate.getSocmt());
		yte.setSodt(yteToUpdate.getSodt());
		yte.setChucvu(yteToUpdate.getChucvu());
		yte.setRole(role.findById(yteToUpdate.getIdrole()));
		return yteRepository.save(yte);
	}

	@Override
	public Boolean exist(Yte yte) {
						return yteRepository.exists(yte.getIdyte());
																																																	}

	@Override
	public List<Yte> findAll() {
		return yteRepository.findAll();
	}

	@Override
	public PageResult<Yte> search(int pageNo, int pageSize) {
		int skip=(pageNo-1)*pageSize;
		List<Yte> Yte= yteRepository.findAllYteWithPagination(skip, pageSize);
		int totalRecordCount=(int)yteRepository.count();
		return new PageResult<Yte>(Yte, pageNo, pageSize, totalRecordCount);
	}

}

